{"route":"/","type":"course","title":" Functional Programming using Haskell","summary":"This is a 5 credit, fourth (final) year module, running on Bsc(Hons) in Applied Computing  for the second semester of 2023-24","contentMd":"# Functional Programming using Haskell\n\nThis is a 5 credit, fourth (final) year module, running on Bsc(Hons) in Applied Computing  for the second semester of 2023-24\nWe use 'Programming in Haskell, 2ed, Graham Hutton, Cambridge University Press' extensively during the course. \n\n","frontMatter":{},"id":"fp-24","img":"https://{{COURSEURL}}/course.png","imgFile":"course.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/topic/{{COURSEURL}}/topic00-assignments","type":"topic","title":" Assessment in Functional Programming","summary":"The module is 50% CA, 50% Final Exam.","contentMd":"# Assessment in Functional Programming\n\nThe module is 50% CA, 50% Final Exam.\n\n\n\n","frontMatter":{},"id":"topic00-assignments","img":"https://{{COURSEURL}}/topic00-assignments/topic.png","imgFile":"topic.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/lab/{{COURSEURL}}/topic00-assignments/book-1","type":"lab","title":"Lab Test 1 ","summary":"Details of lab test 1","contentMd":"# Lab Test 1\n\nDetails of lab test 1\n\n\n\n","frontMatter":{"order":1},"id":"book-1","img":"https://{{COURSEURL}}/topic00-assignments/book-1/img/main.png","imgFile":"img/main.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"title":" Lab Test 1","shortTitle":"Lab Test 1 ","contentMd":"# Lab Test 1\n\nDetails of lab test 1\n\n\n\n","route":"/lab/{{COURSEURL}}/topic00-assignments/book-1/Lab Test 1 ","id":"Lab Test 1 ","type":"step"},{"title":" Lab Class test","shortTitle":"01","contentMd":"# Lab Class test\n\nDetails of  lab class test 1.\n\n## Aim\n\nTo test your level of competence with GHCI and basic Haskell\n\n## When\nThis lab test will take place on Thursday, 8th February in class\n\n## Marks\nThis will be worth 5%. \n\n## Task\n\nYou will need to log into Moodle and the lab test will be made available through Moodle. This will involve being given a number of files as per sample test below. Each section will have instructions.\n\nYou will be asked to upload a zipped version of your changed files  through Moodle and asked to state that the work was your own (you can use any notes, internet, ghc material that helps you). \n\n\n\nA sample  exam is given [here](./archives/haskell_lab_test.zip)\n\n(Note In both the sample exam and the actual exam that the prelude.hs file is for your information only - I have commented it out as you need to load the current version - this automatically happens if you *don't* have a local prelude.hs)","route":"/lab/{{COURSEURL}}/topic00-assignments/book-1/01","id":"01","type":"step"}]}]},{"route":"/topic/{{COURSEURL}}/topic000-assignments wip","type":"topic","title":" Assessment in Functional Programming","summary":"The module is 50% CA, 50% Final Exam.","contentMd":"# Assessment in Functional Programming\n\nThe module is 50% CA, 50% Final Exam.\n\n\n\n","frontMatter":{},"id":"topic000-assignments wip","img":"https://{{COURSEURL}}/topic000-assignments wip/topic.png","imgFile":"topic.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":true,"los":[{"route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-2","type":"lab","title":"Lab Test 2","summary":"Details of Lab Test 2","contentMd":"# Lab Class Test 2\n\nDetails of Lab Test 2\n\n## Aim\n\nTo test your level of competance with Stack, structuring projects, creating  managing dependences and developing a working Stack package. \n\n\n## Marks\nThis will be worth 5%. \n\n## Task\n\nThis is an open book exam so you can use your notes, etc. . When submitting this work, you will be agreeing that the work is your own and that you have not contacted any member of your class or other person to help you in this work. \n\nThe questions will be very similar in nature to the exercises in [lab05]( https://reader.tutors.dev/lab/fp-setu-23/topic07-structuring-programs/unit-07b-labs/book-2/Lab-06)\n\nSo what is being assessed is:\n\n- your ability to create a stack package \n- your ability to  write your own modules and call the their functions in the main function. (I will tell you exactly what the spec of these modules are)\n-  your ability to manage functions from outside libraries. For this part, I will tell you exactly which library you need. You need to be able to configure the stack package to be able to use the relevant functions of this package. This will involve the :\n  - importing of the package into your program\n  - and (in some cases,  when the package is not in base) updating the package.yaml\n\nThe lab test will be published through Moodle on Thursday  during the 11:15 class and will take at most one hour. \n","frontMatter":{"order":2},"id":"book-2","img":"https://{{COURSEURL}}/topic000-assignments wip/book-2/img/main.jpg","imgFile":"img/main.jpg","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"title":" Lab Class Test 2","shortTitle":"Lab Test 2","contentMd":"# Lab Class Test 2\n\nDetails of Lab Test 2\n\n## Aim\n\nTo test your level of competance with Stack, structuring projects, creating  managing dependences and developing a working Stack package. \n\n\n## Marks\nThis will be worth 5%. \n\n## Task\n\nThis is an open book exam so you can use your notes, etc. . When submitting this work, you will be agreeing that the work is your own and that you have not contacted any member of your class or other person to help you in this work. \n\nThe questions will be very similar in nature to the exercises in [lab05]( https://reader.tutors.dev/lab/fp-setu-23/topic07-structuring-programs/unit-07b-labs/book-2/Lab-06)\n\nSo what is being assessed is:\n\n- your ability to create a stack package \n- your ability to  write your own modules and call the their functions in the main function. (I will tell you exactly what the spec of these modules are)\n-  your ability to manage functions from outside libraries. For this part, I will tell you exactly which library you need. You need to be able to configure the stack package to be able to use the relevant functions of this package. This will involve the :\n  - importing of the package into your program\n  - and (in some cases,  when the package is not in base) updating the package.yaml\n\nThe lab test will be published through Moodle on Thursday  during the 11:15 class and will take at most one hour. \n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-2/Lab Test 2","id":"Lab Test 2","type":"step"}]},{"route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-3","type":"lab","title":"Assignment 1","summary":"Student Marks Analysis - 20% of Module Grade","contentMd":"# Assignment 1\n\nStudent Marks Analysis - 20% of Module Grade \n\n","frontMatter":{"order":3},"id":"book-3","img":"https://{{COURSEURL}}/topic000-assignments wip/book-3/img/main.jpeg","imgFile":"img/main.jpeg","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"title":" Assignment 1","shortTitle":"Assignment 1","contentMd":"# Assignment 1\n\nStudent Marks Analysis - 20% of Module Grade \n\n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-3/Assignment 1","id":"Assignment 1","type":"step"},{"title":"1. Student Marks Analysis","shortTitle":"01","contentMd":"#1. Student Marks Analysis\n\nYou are tasked with reading in a csv file, which is made up od a randomised set of student marks. \nYou are asked to do analysis on this file and present the results back on the console. \n\n\n\n###Data Set \nThe data is in the format of a csv file. It is of the following form:\n\n\n![](img/data.PNG) \n\nYou wlil be asked to perform a number of calcluations on the data.\nThis assignment  should be submitted using the stack package. \nYou should accept the assigment started code (just a default stack package) from a GitHub classroom repo, pushing regularly. \n\nYou will be asked to 'submit' your code in two ways \n\n- by ensuring the latest version has been pushed to the GiHub Classroom repo\n- submitting the code to Moodle \n\n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-3/01","id":"01","type":"step"},{"title":"2. Assignment Approach","shortTitle":"02","contentMd":"#2. Assignment Approach\n\nWe will be using GitHub Classroom for this assignment. I am assuming you are using VS Code - if not just ignore the steps that mention VSCode and ensure that you have an appropriately helpful IDE to work with. Also, if you have not used VS Code, note what you used and how you set it up. \n\n\n## Overall Steps in the Assignment:\n\n\n1. *Accepting the Assignment*: You will be given an **invite link** to the assignment in our GitHub Classroom area.  When you click on the link, you accept the assignment from our Github Classroom; this will create a new **remote repository** for you in my classroom area in GitHub.\n\nDetails: \nTo start working on it, click on this invite link:\n\n<https://classroom.github.com/a/x_kMjvxX>  Get this link\n\n\nYou will be prompted to authorise GitHub classroom:\n\n![](img/01.png)\n\nOnce you do this, you will be redirected to join the classroom:\n\n![](img/02.png)\n\nSelect your name from the list and then *accept this assignment* (your assigment will be called ass1):\n\n![](img/03.png)\n\nGithub will start creating a repository for you:\n\n![](img/04.png)\n\nWhen you refresh the page, you should see that a repo has been created for you:\n\n![](img/05.png)\n\n\n1. To use this in VSCode (recommended), you need to add the GitHub Classroom extension to your VS Code install. \n   ![](img/vscode.PNG) \n\n2. Click on  the GitHub icon on the sidebar: \n   \n    ![](img/sidebar.PNG) \n\n3. You will then see:\n\n![](img/accept.PNG) \n\n5. *Clone via VS Code*: You will then **clone** this remote repo onto your **local machine (via VSCode)**.  This will setup a local project in VSCode for you with starter code. (empty stack project)\n\n6. Complete the assignment, as per spec. You should regularly commit and push the code. \n\n6.  *Submitting*: When you are ready to submit, you will ensure that you have pushed your last commit to GitHub.  You will also zip your code and submit it via the dropbox in Moodle.  Both of these must be done by the submission date. \n\n\n\n\n\n\n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-3/02","id":"02","type":"step"},{"title":"3. Starter Code","shortTitle":"03","contentMd":"#3. Starter Code\n\nThe code you accept as the 'starter' is simply a new stack project with the addition of a data file **studentsfp.csv**\ni.e.\n\n![](img/stackstructure.PNG) \n\n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-3/03","id":"03","type":"step"},{"title":"4. Specification","shortTitle":"04","contentMd":"#4. Specification\n\nYou are asked to calculate and print (to the console) the following data: \n\n1. The **average of each students' marks**. (This should be printed beside the full set of data i.e. will look like an extra column)\n2. The **averages of each of the modules' marks**. (These values should be below the given data as an extra column).\n   \n3.  Caclulate the **standard deviation** of each of the modules' marks (these values should be put in the row below the averages).\n\n4. The student who has the **highest overall average mark** (with that average mark) \n\n5.  The student who has the **highest** mark in Functional Programming. (In the case of there being a number of students at this mark, any one of those students will be a valid answer).\n   \n   \n6. The student who has the **lowest** mark in Functional Programming(In the case of there being a number of students at this mark, any one of those students will be a valid answer).\n\n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-3/04","id":"04","type":"step"},{"title":"5. Marking Scheme","shortTitle":"05","contentMd":"#5. Marking Scheme\n\nThis assignment is worth 20% of you module. \n\nThe marks (100) are broken down into the following :\n\n![](img/marking-scheme.PNG) \n\nYou can also get the soft copy from here: \n[Marking Scheme](archives/marking-scheme.xlsx)\n\n\n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-3/05","id":"05","type":"step"},{"title":"6. Submitting your work","shortTitle":"06","contentMd":"#6. Submitting your work\n\n\n### Deadline\n\n-  **Week 1 of Easter holidays: 18:00 PM on Monday , 3rd April  2023.**\n\n\n### Submitting\n\n- **GitHub**: Do a final commit of all your work and push it to your remote repository.\n\n- **Moodle**: \n    - Rename your project name using the naming convention firstnamesurname e.g. maireadmeagher. \n    - Zip the folder containing all the project files, and name the folder firstname_surname.zip. No WINRARs please!\n    - Upload this zip file to Moodle. \n\n\n### Interviews\n\nIt is compulsory that you are interviewed on your submission in order to demonstrate both Understanding and Authorship.\n\nThese interviews will typically take place in labs the week after submission (i.e. Week 7/8).\n\nDuring your interview, you will be asked to explain your work. This is to ensure that the work is your own. You may be asked (for example) to explain:\n\n- Any of the code.\n- How a specific function works \n- How specific functions work together\n- Overview of your approach to assignment\n- etc.\n\nIf you do not present for your interview you will receive 0 for the interview.  As the interview grade is a multiplier for your assigment grade, should you fail to show for your interview, you will receive zero, resulting in an overall grade of zero for your submission.\n\n\n\n### Referencing external materials\n\nIf you use code other than from lectures and labs (e.g. from StackOverFlow, other GitHub accounts, etc), you should always reference it. Failure to do so is plagiarism and will lead to a zero mark.\n\n\n\n### How is the final mark calculated?\n\nThe final mark is calculated using the following formula:\n\n- (((Functionality of Code + Style + Extra Functionality Credit) ) * Interview Mark) / 10\n\nExample:\n\n- Functionality of code  + Style = 70/100\n- Extra Functionality Credit = 6/10\n- Interview Mark = 9/10\n- Final mark = ((70 + 6) * 9) / 10 = 68.4%\n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-3/06","id":"06","type":"step"}]},{"route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-4","type":"lab","title":"Programming Assignment 2","summary":"Details of Programming Assignment 2 (worth 20%)","contentMd":"# Programming Assignment 2\n\nDetails of Programming Assignment 2 (worth 20%)\n\n## Aim\n\nThis Programming Assignment will test your knowledge of manipulating data, using more complex libraries and more complex types.\n\n\n## Marks\nThis assignment is  worth 20%. \n\n## Deadline\n\nThe  deadline is Friday, 5th May at 18:00 with interviews on the following week. ","frontMatter":{"order":5},"id":"book-4","img":"https://{{COURSEURL}}/topic000-assignments wip/book-4/img/main.png","imgFile":"img/main.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"title":" Programming Assignment 2","shortTitle":"Programming Assignment 2","contentMd":"# Programming Assignment 2\n\nDetails of Programming Assignment 2 (worth 20%)\n\n## Aim\n\nThis Programming Assignment will test your knowledge of manipulating data, using more complex libraries and more complex types.\n\n\n## Marks\nThis assignment is  worth 20%. \n\n## Deadline\n\nThe  deadline is Friday, 5th May at 18:00 with interviews on the following week. ","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-4/Programming Assignment 2","id":"Programming Assignment 2","type":"step"},{"title":"Overview of Assignment","shortTitle":"01","contentMd":"#Overview of Assignment\n\n1. You are asked to read in a csv data file from  [here](https://www.kaggle.com/code/muthumanikandan24/developer-salaries). \n(I have changed the names of the columns to simplify the parsing). This is called \"salaries.csv\" and is in your starter code.\n\n1. You are asked to do analysis on the data. (details later)\n\n2. You are asked to use the Stack package to structure your solution, using \n\n    **\\app** to have Main.hs which deals with IO and the main function\n\n   **\\src** which will contain the modules used to strucure and analyse the data. \n\n   **\\test** does not need to be of interest to you. \n\n\n\n5. The 'reporting' will be\n\n    1. Text based to the screen;\n    2. Generated html files.\n\n6. This assignment is heavliy based on a case study that is presented  on the **stockQuotes** example. This is published  [here](https://reader.tutors.dev/lab/fp-setu-23/topic99-scaffolding/unit-99b-labs/book-2) (on tutors) and you should use this to influence the structure of your solution.\n\n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-4/01","id":"01","type":"step"},{"title":"Suggested Plan of Attack ","shortTitle":"02","contentMd":"#Suggested Plan of Attack \n\nI suggest the following plan of attack for this assignment. \n\n1. You should read the  **stockQuotes**  example.\n\n2. Make changes to the code given, add in more analysis, ensure that you understand that code.\n\n3. Download your starter code from [here](https://classroom.github.com/a/x3Tw6eai).\n   \n4. Design your  data type (Similar to QuoteData). \n\n5. Work on calculations.\n\n6. Test it on simple text to console.\n\n7.  Try a simple generation of html to a file. (From the Main.hs)\n\n8.  Work this until there is full versions of data (analogous to the html in StockQuotes example) being reported to the HTML File. Ensure that you have generated all specified reports. \n\n    \n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-4/02","id":"02","type":"step"},{"title":" Data analyis and Reporting ","shortTitle":"03","contentMd":"# Data analyis and Reporting \n\nYou are asked to report at least the following using text and html generation :\n\n![](img/results.png) \n\n# text only\n - the highest,lowest and mean adjusted salary, difference between highest and lowest mean adjusted salary. In the case of lowest and highest, the city(city name) should be listed\n   - repeat this for each of the appropriate number fields\n\n- some extra analysis of your own choosing\n\n# html   \n- writing the above data and a formatted version of the salaries file to a html file (as per Stockquotes)\n\n# parameters\n\n- using command line arguments to choose which functionalities to run \n\n# Extras\n- Extra (e.g charts of data (e.g. candlestick data)) \n\n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-4/03","id":"03","type":"step"},{"title":" Date of submission, Marking Scheme ","shortTitle":"04","contentMd":"# Date of submission, Marking Scheme \n\n## Date of Submission\nThe  deadline is Friday, 5th May at 18:00 with interviews on the following week. \n\n\nInterview\nYou will be interviewed on this assignment. It is alright (and expected) that you use the case study extensively but you MUST understand the code that you submit. For the other functions, you can use similar ideas but the more different the better. \nReference any material (outside the material directly given by me) including any use of AI bots. \n\n---\n## Marking Scheme \n\n(Indiciave but close enough!)\n\n| Part of assignment                                           | %    |\n| ------------------------------------------------------------ | ---- |\n| Working stack solution / use of libraries etc                | 5    |\n| Using Data.Csv to parse the given csv file, including parseNamedRecord, parseNamedField | 5   |\n| Definition and use of apprpopriate CityType data type        | 10  |\n| Report generation including use of traversal over data types (similar to **statInfo** ), text based and prep for html generation. This to include some extra calculations | 30  |\n| Generating html code using the generated data from above  | 10  |\n| Command line arguments                          | 5    |\n| Bringing it all together in Main.hs                          | 5   |\n| Extra  (wow factor)                                          | 10  |\n| Clarity, appropriateness, elegance, haskell-ness of code (including naming) | 20   |\n\n\n\nAlso, clearly describe any extra functionality in your readme.md. \n\nThe mark for the interview (which tests your authorship and  understanding of the code ) will take place in week after submission and will be used as a multiplier for the code. \nIt follows that the interview is mandatory. You need to be available following the submission of the assignment. Schedule will be available nearer the time.\n\n\nPlease note that if. you submit early, I can be available to interview at a time that suits both of us. \n","route":"/lab/{{COURSEURL}}/topic000-assignments wip/book-4/04","id":"04","type":"step"}]}]},{"route":"/topic/{{COURSEURL}}/topic01-introduction","type":"topic","title":" 1: Introduction to FP and Haskell","summary":"Introducing Functional Programming","contentMd":"# 1: Introduction to FP and Haskell\n\nIntroducing Functional Programming","frontMatter":{},"id":"topic01-introduction","img":"https://{{COURSEURL}}/topic01-introduction/topic.png","imgFile":"topic.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/topic/{{COURSEURL}}/topic01-introduction/","type":"unit","title":"Lectures","summary":"Lectures","contentMd":"Lectures","frontMatter":{},"id":"unit-01a-lectures","img":"","imgFile":"","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/talk/{{COURSEURL}}/topic01-introduction/unit-01a-lectures/talk-1","type":"talk","title":"Description and Assessment","summary":"This document describes the module and how we will approach it","contentMd":"Description and Assessment\n\nThis document describes the module and how we will approach it\n\n","frontMatter":{},"id":"talk-1","img":"https://{{COURSEURL}}/topic01-introduction/unit-01a-lectures/talk-1/b-desc-to-module.jpg","imgFile":"b-desc-to-module.jpg","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"pdf":"https://{{COURSEURL}}/topic01-introduction/unit-01a-lectures/talk-1/b-desc-to-module.pdf","pdfFile":"b-desc-to-module.pdf"},{"route":"/talk/{{COURSEURL}}/topic01-introduction/unit-01a-lectures/talk-2","type":"talk","title":"Introduction","summary":"Introduction to Functional Programming and Haskell.","contentMd":"Introduction\n\nIntroduction to Functional Programming and Haskell. \n\n\n","frontMatter":{},"id":"talk-2","img":"https://{{COURSEURL}}/topic01-introduction/unit-01a-lectures/talk-2/a-fp-intro.jpg","imgFile":"a-fp-intro.jpg","video":"/video/{{COURSEURL}}/topic01-introduction/unit-01a-lectures/talk-2/SYoIrcQc4MI","videoids":{"videoid":"SYoIrcQc4MI","videoIds":[{"service":"youtube","id":"SYoIrcQc4MI"}]},"hide":false,"pdf":"https://{{COURSEURL}}/topic01-introduction/unit-01a-lectures/talk-2/a-fp-intro.pdf","pdfFile":"a-fp-intro.pdf"}]},{"route":"/topic/{{COURSEURL}}/topic01-introduction/","type":"unit","title":"Labs","summary":"Labs","contentMd":"Labs","frontMatter":{},"id":"unit-01b-labs","img":"","imgFile":"","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/lab/{{COURSEURL}}/topic01-introduction/unit-01b-labs/book","type":"lab","title":"Links","summary":"Links to Haskell resources - books, websites etc. ","contentMd":"## Useful links\n\nLinks to Haskell resources - books, websites etc. \n\t\n\n - The textbook for this course is 'Programming in Haskell', Graham Hutton,Second Edition, Cambridge University Press, ISBN 978-1316626221. Lecture notes will be based on the structure of this book. \n\n  [![Programming in Haskell](./img/01.png) ](http://www.cs.nott.ac.uk/~pszgmh/pih.html)\n \n  A playlist of videos that Graham has produced is available here :\n[Programming in Haskell - the videos](https://youtube.com/playlist?list=PLF1Z-APd9zK7usPMx3LGMZEHrECUGodd3)\n\n ##Other Texts \n\n -  Learn you a Haskell For Great Good. This is a free text available to download. \n [![Learn you a Haskell For Great Good](./img/02.png)](http://learnyouahaskell.com/)\n \n - 'Haskell: the Craft of Functional Programming', Simon Thompson, Third Edition, Pearson, ISBN  0201882957.\n [![Haskell: the Craft of Functional Programming](./img/03.png)]( http://www.haskellcraft.com/craft3e/Home.html)\n\n## Other Resources \n\n [![Learning Haskell - Resources](./img/04.png)]( https://wiki.haskell.org/Learning_Haskell)\n - This  brings you to a treasure trove of ways to learn Haskell including\n    - Training Courses\n    - Texts books (some free)\n    - Online tutorials (look at [meta-tutorial](https://wiki.haskell.org/Meta-tutorial)  in this section to get started) Some are well structured, some look clunky but have  well structured material. Have a look. \n    - Sections on particluar areas e.g. debugging, monads, type classes, generic programming, popular libraries.\n\n   \n - There is a good online community and a very good free email newsletter called [Haskell Weekly](https://haskellweekly.news/). You can sign up and it will be delivered, um, weekly. \n \n - A Podcast,  called [The Haskell Intelude](https://podcasts.apple.com/ie/podcast/the-haskell-interlude/id1581807590). They usually have interviews with significant people in the Haskell world. \n \n\n - There are many online courses. The variety and quality varies. They might be useful if you wish to delve in later at a more advanced level. \n","frontMatter":{},"id":"book","img":"https://{{COURSEURL}}/topic01-introduction/unit-01b-labs/book/img/main.jpg","imgFile":"img/main.jpg","video":"/video/{{COURSEURL}}/topic01-introduction/unit-01b-labs/book/YXkay8RXL3Y","videoids":{"videoid":"YXkay8RXL3Y","videoIds":[{"service":"youtube","id":"YXkay8RXL3Y"}]},"hide":false,"los":[{"title":" Useful links","shortTitle":"Links","contentMd":"## Useful links\n\nLinks to Haskell resources - books, websites etc. \n\t\n\n - The textbook for this course is 'Programming in Haskell', Graham Hutton,Second Edition, Cambridge University Press, ISBN 978-1316626221. Lecture notes will be based on the structure of this book. \n\n  [![Programming in Haskell](./img/01.png) ](http://www.cs.nott.ac.uk/~pszgmh/pih.html)\n \n  A playlist of videos that Graham has produced is available here :\n[Programming in Haskell - the videos](https://youtube.com/playlist?list=PLF1Z-APd9zK7usPMx3LGMZEHrECUGodd3)\n\n ##Other Texts \n\n -  Learn you a Haskell For Great Good. This is a free text available to download. \n [![Learn you a Haskell For Great Good](./img/02.png)](http://learnyouahaskell.com/)\n \n - 'Haskell: the Craft of Functional Programming', Simon Thompson, Third Edition, Pearson, ISBN  0201882957.\n [![Haskell: the Craft of Functional Programming](./img/03.png)]( http://www.haskellcraft.com/craft3e/Home.html)\n\n## Other Resources \n\n [![Learning Haskell - Resources](./img/04.png)]( https://wiki.haskell.org/Learning_Haskell)\n - This  brings you to a treasure trove of ways to learn Haskell including\n    - Training Courses\n    - Texts books (some free)\n    - Online tutorials (look at [meta-tutorial](https://wiki.haskell.org/Meta-tutorial)  in this section to get started) Some are well structured, some look clunky but have  well structured material. Have a look. \n    - Sections on particluar areas e.g. debugging, monads, type classes, generic programming, popular libraries.\n\n   \n - There is a good online community and a very good free email newsletter called [Haskell Weekly](https://haskellweekly.news/). You can sign up and it will be delivered, um, weekly. \n \n - A Podcast,  called [The Haskell Intelude](https://podcasts.apple.com/ie/podcast/the-haskell-interlude/id1581807590). They usually have interviews with significant people in the Haskell world. \n \n\n - There are many online courses. The variety and quality varies. They might be useful if you wish to delve in later at a more advanced level. \n","route":"/lab/{{COURSEURL}}/topic01-introduction/unit-01b-labs/book/Links","id":"Links","type":"step"}]}]}]},{"route":"/topic/{{COURSEURL}}/topic02-first-steps","type":"topic","title":" 2: First Steps in using GCHi and Haskell","summary":"Starting to write Haskell code and using GHCI","contentMd":"# 2: First Steps in using GCHi and Haskell\n\nStarting to write Haskell code and using GHCI","frontMatter":{},"id":"topic02-first-steps","img":"https://{{COURSEURL}}/topic02-first-steps/topic.png","imgFile":"topic.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/topic/{{COURSEURL}}/topic02-first-steps/","type":"unit","title":"Lectures","summary":"Lectures","contentMd":"Lectures","frontMatter":{},"id":"unit-02a-lectures","img":"","imgFile":"","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/talk/{{COURSEURL}}/topic02-first-steps/unit-02a-lectures/talk-1","type":"talk","title":"Introduction","summary":"Introduction to FP and Haskell.","contentMd":"Introduction\n\nIntroduction to FP and Haskell. \n\n\n","frontMatter":{},"id":"talk-1","img":"https://{{COURSEURL}}/topic02-first-steps/unit-02a-lectures/talk-1/a-introduction-to-haskell.png","imgFile":"a-introduction-to-haskell.png","video":"/video/{{COURSEURL}}/topic02-first-steps/unit-02a-lectures/talk-1/Db_kwaQ3-n8","videoids":{"videoid":"Db_kwaQ3-n8","videoIds":[{"service":"youtube","id":"Db_kwaQ3-n8"}]},"hide":false,"pdf":"https://{{COURSEURL}}/topic02-first-steps/unit-02a-lectures/talk-1/a-introduction-to-haskell.pdf","pdfFile":"a-introduction-to-haskell.pdf"},{"route":"/talk/{{COURSEURL}}/topic02-first-steps/unit-02a-lectures/talk-2","type":"talk","title":"First Steps","summary":"Starting using GHCI and running Haskell Code","contentMd":"First Steps\n\nStarting using GHCI and running Haskell Code\n\n\n","frontMatter":{},"id":"talk-2","img":"https://{{COURSEURL}}/topic02-first-steps/unit-02a-lectures/talk-2/b-first-steps.png","imgFile":"b-first-steps.png","video":"/video/{{COURSEURL}}/topic02-first-steps/unit-02a-lectures/talk-2/xGh7AgOydWs","videoids":{"videoid":"xGh7AgOydWs","videoIds":[{"service":"youtube","id":"xGh7AgOydWs"}]},"hide":false,"pdf":"https://{{COURSEURL}}/topic02-first-steps/unit-02a-lectures/talk-2/b-first-steps.pdf","pdfFile":"b-first-steps.pdf"}]},{"route":"/topic/{{COURSEURL}}/topic02-first-steps/","type":"unit","title":"Labs and Exercises","summary":"Labs and Exercises","contentMd":"Labs and Exercises","frontMatter":{},"id":"unit-02b-labs","img":"","imgFile":"","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/talk/{{COURSEURL}}/topic02-first-steps/unit-02b-labs/talk-2","type":"talk","title":"Exercises on First Steps","summary":"Exercises on first steps","contentMd":"Exercises on First Steps\n\nExercises on first steps \n\n","frontMatter":{},"id":"talk-2","img":"https://{{COURSEURL}}/topic02-first-steps/unit-02b-labs/talk-2/b-exercises-first-steps.png","imgFile":"b-exercises-first-steps.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"pdf":"https://{{COURSEURL}}/topic02-first-steps/unit-02b-labs/talk-2/b-exercises-first-steps.pdf","pdfFile":"b-exercises-first-steps.pdf"},{"route":"/lab/{{COURSEURL}}/topic02-first-steps/unit-02b-labs/book-1","type":"lab","title":"Lab-01","summary":"Installing and using GHCi","contentMd":"# Getting Started with GHCi\n\nInstalling and using GHCi\n","frontMatter":{},"id":"book-1","img":"https://{{COURSEURL}}/topic02-first-steps/unit-02b-labs/book-1/img/main.jpg","imgFile":"img/main.jpg","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"title":" Getting Started with GHCi","shortTitle":"Lab-01","contentMd":"# Getting Started with GHCi\n\nInstalling and using GHCi\n","route":"/lab/{{COURSEURL}}/topic02-first-steps/unit-02b-labs/book-1/Lab-01","id":"Lab-01","type":"step"},{"title":" Objectives","shortTitle":"01","contentMd":"# Objectives\n\nOn completion of this lab you should:\n\n- have GHC complier and interpreter installed on your laptop.\n\n- be able to use the GHCi interpreter to test simple examples. \n\n- be able to run simple Haskell scripts using the GHCI interface.\n\n- have chosen and used a source code editor.\n","route":"/lab/{{COURSEURL}}/topic02-first-steps/unit-02b-labs/book-1/01","id":"01","type":"step"},{"title":" Installing GHC (Glasgow Haskell Compiler)","shortTitle":"02","contentMd":"# Installing GHC (Glasgow Haskell Compiler)\n\n- I am assuming that you are installing GHC on your own laptop.\n\n## Downloading and installing GHC\n\n- GHC inludes a compiler and an interpreter (GHCi). \n\n- There is a good description of how to set up the environment [here]( https://www.haskell.org/get-started//)\n\n- Use GHCup - it makes the installation straightforward. \n\n\n - Install the package. The installation will depend on your OS. Follow instructions as per your OS and we can deal with any issues in the lab.  You don't need to install Stack yet. \n  \n - When you have sucessfully installed GHC, run the interactive environment (GHCi) by simply \ntyping ghci at terminal prompt: \n\n ![](./img/02.png)\n\nYou should be seeing version  9.4.8 or higher. \n\n\n","route":"/lab/{{COURSEURL}}/topic02-first-steps/unit-02b-labs/book-1/02","id":"02","type":"step"},{"title":" Running simple Haskell programs","shortTitle":"03","contentMd":"# Running simple Haskell programs\n\n- We can execute small simple programs using GHCi (i for interactive) alone. \n- To practice this, firstly run the GHCi interpreter (as per previous page). A prompt is displayed > \n- Use GHCi to evaluate the following: \n\n## Exercise 1\n~~~\n2+3\n~~~\n\n## Exercise 2\n~~~\n2*3\n~~~\n\n## Exercise 3\n`div` is the infix integer division operator (note the quotes character - backward quote)\n~~~\n7 `div` 2\n~~~\n\n## Exercise 4\nSelect the first element of a non-empty list:\n~~~\nhead [1,2,3,4,5]\n~~~\n\n## Exercise 5\nRemove the first elemenet of a non-empty list: \n~~~\ntail [1,2,3,4,5]\n~~~\n\n## Exercise 6\nSelect the first n elements of a list: \n~~~\ntake 3  [1,2,3,4,5]\n~~~\n\n\n## Exercise 7\nRemove the first n elements of a list: \n~~~\ndrop 3  [1,2,3,4,5]\n~~~\n\n## Exercise 8\nSelect the nth element of a list (from index 0): \n~~~\n[1,2,3,4,5] !! 3\n~~~\n\n## Exercise 9\nCalculate the length of a list:\n~~~\nlength [1,2,3,4,5] \n~~~\n\n## Exercise 10\nCalculate the sum of a list:\n~~~\nsum [1,2,3,4,5] \n~~~\n\n## Exercise 11\nCalculate the product of a list:\n~~~\nproduct [1,2,3,4,5] \n~~~\n## Exercise 12\nAppend two lists:\n~~~\n[1,2,3,4,5]  ++ [4,6,7,8]\n~~~\n## Exercise 13\nCalculate the reverse of a list:\n~~~\nreverse [1,2,3,4,5] \n~~~\n## Exercise 14\nPrepend an element to a  list:\n~~~\n1: [2,3,4,5] \n~~~","route":"/lab/{{COURSEURL}}/topic02-first-steps/unit-02b-labs/book-1/03","id":"03","type":"step"},{"title":" Using GHC","shortTitle":"04","contentMd":"# Using GHC\n - To load compiled code. \n - Using the terminal, cd to your working directory. (this just makes the loading simpler)\n - Create a simple Haskell script:\n\n~~~\nmain = print (fac 20)\n\nfac 0 = 1\nfac n = n * fac (n-1)\n~~~\n\nCall it, e.g.  'Main.hs'\n\n  - load the script (Main.hs)  \n![](./img/03.png)\n\n - This compiles it as well as loading it.  You can now call the fac function: \n\n- ![run the fac function ](./img/04.png)\n\n- You can also call the main function:     \n![run the main function ](./img/05.png)\n\n\n - If you make any changes to the script, you need to reload it (thus recompiling it) : \n\n ![reload the script ](./img/06.png)\n\nThere are a number of important and useful commands:\n\n - Quit GHCi: :q\n - Load a file into GHCi (autocompletion also applies to files): :l FILENAME\n - Re-load the file which is currently loaded into GHCi: :r\n -List the type signatures of all functions in the currently loaded file: :browse\n- Print the type of a given expression: :t EXPRESSION\n\n- A list of GHCi commands is available  <a href=\"https://downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/ghci-commands.html\" target=\"_blank\">here</a>   \n\n- When you need to use a terminal command, just use :! \n","route":"/lab/{{COURSEURL}}/topic02-first-steps/unit-02b-labs/book-1/04","id":"04","type":"step"},{"title":" Source Code Editors","shortTitle":"05","contentMd":"# Source Code Editors\n\nIt is your choice as to the editor you use. Some suggestions are \n\n - Visual Studio Code (recommended)\n\n - Atom (for Macs)\n\n - Sublime Text\n\nHaving installed a working version of GHC, it is helpful to install a source code editor early in the semester. \n\n## Visual Studio Code\n\n It is recommended to use VS Code with the Haskell plugin and a terminal from within VS Code to run the Haskell script opened in the VS Code editor. This is the least cumbersone approach. \n\n\n  - You should ensure that a **Haskell** extension is installed as an Extension. (This should happen automatically)\n\n  - A **linter** (<a href=\"https://en.wikipedia.org/wiki/Lint_(software)\" target=\"_blank\">what's a linter?</a>).It's not necessary, especially at the beginning but will be very useful later on.\n\n  - Note that the vsCode extension (I suggest **hlint** or **haskell-linter**) is essentially a wrapper for the **hlint** program(<a href=\"https://hackage.haskell.org/package/hlint\" target=\"_blank\">here</a>). This may be a little tricky to set up but is worth the effort. \n\n\n ","route":"/lab/{{COURSEURL}}/topic02-first-steps/unit-02b-labs/book-1/05","id":"05","type":"step"}]}]}]},{"route":"/topic/{{COURSEURL}}/topic03-types-and-classes","type":"topic","title":" 3: Introduction to Types and Classes","summary":"Typing functions in Haskell","contentMd":"# 3: Introduction to Types and Classes\n\nTyping functions in Haskell","frontMatter":{},"id":"topic03-types-and-classes","img":"https://{{COURSEURL}}/topic03-types-and-classes/topic.png","imgFile":"topic.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/topic/{{COURSEURL}}/topic03-types-and-classes/","type":"unit","title":"Lectures","summary":"Lectures","contentMd":"Lectures","frontMatter":{},"id":"unit-03a-lectures","img":"","imgFile":"","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/talk/{{COURSEURL}}/topic03-types-and-classes/unit-03a-lectures/talk-1","type":"talk","title":" Types and Classes in Haskell","summary":"Types and Classes","contentMd":"# Types and Classes in Haskell\n\nTypes and Classes\n\n\n","frontMatter":{},"id":"talk-1","img":"https://{{COURSEURL}}/topic03-types-and-classes/unit-03a-lectures/talk-1/a-types-and-classes.png","imgFile":"a-types-and-classes.png","video":"/video/{{COURSEURL}}/topic03-types-and-classes/unit-03a-lectures/talk-1/Dl0ZrqCoHVg","videoids":{"videoid":"Dl0ZrqCoHVg","videoIds":[{"service":"youtube","id":"Dl0ZrqCoHVg"}]},"hide":false,"pdf":"https://{{COURSEURL}}/topic03-types-and-classes/unit-03a-lectures/talk-1/a-types-and-classes.pdf","pdfFile":"a-types-and-classes.pdf"}]},{"route":"/topic/{{COURSEURL}}/topic03-types-and-classes/","type":"unit","title":"Labs and Exercises","summary":"Labs and Exercises","contentMd":"Labs and Exercises","frontMatter":{},"id":"unit-03b-labs-exercises","img":"","imgFile":"","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/talk/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/talk","type":"talk","title":" Exercises Types and Classes in Haskell","summary":"Practicing on types and declaring functions.","contentMd":"# Exercises Types and Classes in Haskell\n\nPracticing on types and declaring functions. \n\n\n","frontMatter":{"order":1},"id":"talk","img":"https://{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/talk/b-exercises-types-and-classes.png","imgFile":"b-exercises-types-and-classes.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"pdf":"https://{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/talk/b-exercises-types-and-classes.pdf","pdfFile":"b-exercises-types-and-classes.pdf"},{"route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book1","type":"lab","title":"Lab-02","summary":"Working through types.","contentMd":"# Getting Started Types and using compiler\n\nWorking through types. \n","frontMatter":{"order":2},"id":"book1","img":"https://{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book1/img/main.png","imgFile":"img/main.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"title":" Getting Started Types and using compiler","shortTitle":"Lab-02","contentMd":"# Getting Started Types and using compiler\n\nWorking through types. \n","route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book1/Lab-02","id":"Lab-02","type":"step"},{"title":"","shortTitle":"01","contentMd":"\n\n# Objectives\n\nOn completion of this lab you should:\n\n- Understand more about types\n\n- be familiar with the Haskell compiler and its error reporting.\n\n\n","route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book1/01","id":"01","type":"step"},{"title":" Naming Values Worksheet","shortTitle":"02","contentMd":"# Naming Values Worksheet\n - The purpose of this worksheet is for you to work through the worksheet. \n - Copy and paste  the code into a .hs script. \n - Load this script into GHCi.  (either by calling \n\n ~~~\n ghci filemame\n ~~~\n \n outside ghci or \n \n ~~~\n :l filename\n ~~~\n \n from inside ghci)\n - Go through the code, section by section.\n - For example, for the first code snippet, replace the \n   ~~~\n   pie = undefined\n   ~~~ \n   with \n   ~~~\n   pie = 3.1416\n   ~~~\n\n - At each stage, test your change by \n \t- reloading script - by typing \n\t~~~\n\t:r\n\t~~~\n\t\n \t- testing values : e.g. for first snippet, simply type \n~~~\n > pie\n~~~\n - You should expect to get back the new value of pie.\n\n~~~\n--- Naming Values worksheet\n\n\n------------------------------------------------\n-- pi is a real number which is approximately\n-- three and 1,416 ten thousandths. Define a Double\n-- with this approximate value.\n\npie:: Double             \npie = undefined\n\n\n--------------------------------------------------\n-- The formula for the area of a circle is \n-- pie times r squared, where r is the radius of \n-- the circle. Define a Double which is the area \n-- in square centimeters of a circle with diameter \n-- 10 centimeters.\n\nareaCircleDiameter10:: Double\nareaCircleDiameter10 = undefined\n\n\n----------------------------------------------\n-- Define an Integer that is the number of \n-- seconds in a week.\n\nsecondsIn1Week:: Integer\nsecondsIn1Week = undefined\n\n\n---------------------------------------------\n-- Define a List of Integers with the elements\n-- 1 to 10 in increasing order\n\noneToTen:: [Integer]\noneToTen = undefined\n\n\n---------------------------------------------\n-- Define a string that is your first name\n\nyourFirstName:: String\nyourFirstName = undefined\n\n\n---------------------------------------------\n-- Define an Integer that is your age\n\nyourAge:: Integer     \nyourAge = undefined\n\n\n---------------------------------------------\n-- Define a Bool truthvalue that is \n-- (yourAge is greater than 19) or (yourFirstName is \"Tim\")\n\ncompareName:: Bool\ncompareName = undefined\n\n\n---------------------------------------------\n-- Define an Double that is the average of \n-- 3.0, 7.42, and 24.8\n\naverage:: Double\naverage = undefined\n\n\n---------------------------------------------\n-- Define an Integer that is the remainder\n-- when 14563 is divided by 22. Hint use the \n-- \"mod\" operator. Try it out to see how it works\n\nremainder::Integer \nremainder = undefined\n\n\n---------------------------------------------\n-- Define a tuple that has your first name \n-- and your age.\n\ntuple:: (String,Integer)\ntuple = undefined\n\n\n---------------------------------------------\n-- Compute the difference between your\n-- approximation of pie, and the fraction\n-- 22 divided by 7.\n\ndifference:: Double\ndifference = undefined\n\n~~~","route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book1/02","id":"02","type":"step"},{"title":" Implicit Types Worksheet","shortTitle":"03","contentMd":"# Implicit Types Worksheet\n - The purpose of this worksheet is for you to work through the worksheet. \n - Copy and paste  the code into a .hs script. \n - Load this script into GHCi. \n - Go through the code, section by section, reading the instructions. \n \n~~~\n----------------------------------\n-- add a type declaration\n-- to each of the named expressions\ni1:: Integer  -- I have done the first one for you\ni1 = 45\n\ni2 = \"123\"\n\ni3 = 45 <= i1\n\ni4 = 'c'\n\ni5 = [\"abc\",\"ok\"]\n\ni6 = head i5\n\ni7 = tail \"abc\"  -- Recall a string is a shorthand for a list of Char\n\ni8 = (True,4.5)\n\ni9 = [i1,34]\n\n-------------------------------------------------\n-- For each named expression replace \"undefined\"\n-- with an expression with the same type as the declaration\n\n\nj1:: (String,Integer)\nj1 = undefined\n\nj2:: [Integer]\nj2 = undefined\n\nj3:: Char\nj3 = undefined\n\n\nj4:: Double\nj4 = undefined\n\n\nj5:: (Integer,String,Integer,Char)\nj5 = undefined\n\nj6:: ([Char],(Bool,String))\nj6 = undefined\n\nj7:: [[Bool]]\nj7 = undefined\n\nj8:: [(String,Bool)]\nj8 = undefined\n~~~","route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book1/03","id":"03","type":"step"}]},{"route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book2","type":"lab","title":"Lab-03","summary":"Working through errors in scripts.","contentMd":"# Fixing Errors\n\nWorking through errors in scripts. \n","frontMatter":{"order":3},"id":"book2","img":"https://{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book2/img/main.png","imgFile":"img/main.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"title":" Fixing Errors","shortTitle":"Lab-03","contentMd":"# Fixing Errors\n\nWorking through errors in scripts. \n","route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book2/Lab-03","id":"Lab-03","type":"step"},{"title":" Objectives","shortTitle":"01","contentMd":"# Objectives\n\nOn completion of this lab you should:\n\n- Understand more about errors in scripts, fixing errors\n\n\n\n\n","route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book2/01","id":"01","type":"step"},{"title":" Fixing Errors","shortTitle":"02","contentMd":"# Fixing Errors\n - The purpose of this worksheet is for you to work through the worksheet. \n - Copy and paste  the code into a .hs script. \n - Load this script into GHCi. \n - Go through the code, section by section,fixing one error at a time. Reload, check and move onto the next error, and so on,\n\n\n \n~~~\na1:: Integer\na1 = True                   -- Hint  - What type is True\n\na2 = seven * 6         \n\n a3 = 99                  \n \na4 = length 4.0           \n\na6 =                       \n\na7 = if a3=99 then 1 else 0     \n\na8 = if 2<5 then 'a' else \"a\"  \n\na9:: Int -> Int\na9 x = x `div` 2\n\na10 = a9 a5\n\na11 = 4 && True                \n~~~","route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book2/02","id":"02","type":"step"},{"title":" Implicit Types Worksheet","shortTitle":"03","contentMd":"# Implicit Types Worksheet\n - The purpose of this worksheet is for you get familiar with precedences and the use of brackets. . \n - Copy and paste  the code into a .hs script. \n - Load this script into GHCi. \n - Go through the code, section by section, reading the instructions. \n \n-- In this worksheet replace each  \"X2 = undefined\" with \"X2 = fully-parenthesiszed-expression\"\n-- such that X1 and X2 evaluate to the same value. \n-- \n-- You may want to consult the table of precedences.\n~~~\n-- ------+-----------------------+-----------------------+--------------------+\n\n-- Prec-  |  Left associative     | Non-associative       | Right associative  |\n\n-- edence|  operators            | operators             | operators          |\n-- ------|-----------------------|-----------------------|--------------------+\n-- 9     | !!              .     |                       |                    |\n-- ------|-----------------------|-----------------------|--------------------+\n-- 8     |                       |                       | ^    ^^    **      |\n-- ------|-----------------------|-----------------------|--------------------+\n-- 7     | *   /  `div`          |                       |                    |\n--       | `mod`  `rem`  `quot`  |                       |                    |\n-- ------|-----------------------|-----------------------|--------------------+    \n-- 6     | +   -                 |                       |                    |\n-- ------|-----------------------|-----------------------|--------------------+\n-- 5     |                       |                       | :  ++              |\n-- ------|-----------------------|-------------------- --|--------------------+\n-- 4     |                       | ==  /=   <   <=   >   |                    |\n--       |                       | >=  `elem`  `notElem` |                    |\n-- ------|-----------------------|-----------------------|--------------------+\n-- 3     |                       |                       | &&                 |\n-- ------|-----------------------|-----------------------|--------------------+\n-- 2     |                       |                       | ||                 |\n-- ------|-----------------------|-----------------------|--------------------+\n-- 1     | >>   >>=              |                       |                    |\n-- ------|-----------------------|-----------------------|--------------------+\n-- 0     |                       |                       | $    $!   `seq`    |\n-- ------|-----------------------|-----------------------|--------------------+\n\n\n\n\n-- For example I have done \"a2\" below\n\na1 = 3 + 5 * 5\na2 = (3 + (5 * 5))\n\n\n------------------------------\nb1 = 5 < 2 + 4\nb2 = undefined\n\n------------------------------\nc1 = length [2] + 5 * 2\nc2 = undefined\n\n-----------------------------\nd1 = 5 ^ id 3\nd2 = undefined\n\n-----------------------------\ne1 = [2,3,4] !! 2 ^ 5\ne2 = undefined\n\n-----------------------------\nf1 = 3 > 4  &&  2 == 5 * 3\nf2 = undefined\n\n------------------------------\ng1 = True && 3 `elem` [3,4,5]\ng2 = undefined\n\n\n---------------------------------------------------------------------\n-- if when you type \"main\" you get True, then you have succeeded\n\ncheckAll = all true [a1==a2, b1==b2,c1==c2,d1==d2,e1==e2,f1==f2,g1==g2]\n  where true x = x==True\n\n~~~","route":"/lab/{{COURSEURL}}/topic03-types-and-classes/unit-03b-labs-exercises/book2/03","id":"03","type":"step"}]}]}]},{"route":"/topic/{{COURSEURL}}/topic04-functions-and-lambda-calculus","type":"topic","title":" 4: Defining Functions and Lambda Calculus","summary":"Effects and side-effects, in functions, conditional expressions, guarded equations, pattern matching, lambda calculus","contentMd":"# 4: Defining Functions and Lambda Calculus\n\nEffects and side-effects, in functions, conditional expressions, guarded equations, pattern matching, lambda calculus","frontMatter":{},"id":"topic04-functions-and-lambda-calculus","img":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/topic.PNG","imgFile":"topic.PNG","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/topic/{{COURSEURL}}/topic04-functions-and-lambda-calculus/","type":"unit","title":"Lectures","summary":"Lectures","contentMd":"Lectures","frontMatter":{},"id":"unit-04a-lectures","img":"","imgFile":"","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/talk/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-1","type":"talk","title":" Defining Functions in Haskell","summary":"Effects and side-effects in functions. Writing functions  (video 38 mins)","contentMd":"# Defining Functions in Haskell\n\nEffects and side-effects in functions. Writing functions  (video 38 mins)\n\n","frontMatter":{},"id":"talk-1","img":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-1/a-functions.png","imgFile":"a-functions.png","video":"/video/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-1/QlduGtGTFYE","videoids":{"videoid":"QlduGtGTFYE","videoIds":[{"service":"youtube","id":"QlduGtGTFYE"}]},"hide":false,"pdf":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-1/a-functions.pdf","pdfFile":"a-functions.pdf"},{"route":"/talk/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-2","type":"talk","title":" Slides  on Lambda Calculus","summary":"Lambda Calculus - slides (video 31 mins)","contentMd":"# Slides  on Lambda Calculus\n\nLambda Calculus - slides (video 31 mins)\n\n\n","frontMatter":{},"id":"talk-2","img":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-2/b-lambda-calculus.png","imgFile":"b-lambda-calculus.png","video":"/video/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-2/1JZPD0wt_fY","videoids":{"videoid":"1JZPD0wt_fY","videoIds":[{"service":"youtube","id":"1JZPD0wt_fY"}]},"hide":false,"pdf":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-2/b-lambda-calculus.pdf","pdfFile":"b-lambda-calculus.pdf"},{"route":"/talk/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-3","type":"talk","title":" First Class Functions      ","summary":"Lambda, let, where, First Class Functions. (Video 24 mins)","contentMd":"# First Class Functions      \n\nLambda, let, where, First Class Functions. (Video 24 mins)\n\n","frontMatter":{},"id":"talk-3","img":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-3/c-first-class.png","imgFile":"c-first-class.png","video":"/video/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-3/zeTXZe_pppk","videoids":{"videoid":"zeTXZe_pppk","videoIds":[{"service":"youtube","id":"zeTXZe_pppk"}]},"hide":false,"pdf":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-3/c-first-class.pdf","pdfFile":"c-first-class.pdf"},{"route":"/talk/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-4","type":"talk","title":" Closures and Partial Application","summary":"Closures and how they relate to partial appl of fns. (Video 9 mins)","contentMd":"# Closures and Partial Application\n\nClosures and how they relate to partial appl of fns. (Video 9 mins)\n\n","frontMatter":{},"id":"talk-4","img":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-4/d-closures.png","imgFile":"d-closures.png","video":"/video/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-4/gb8IPYMbMS4","videoids":{"videoid":"gb8IPYMbMS4","videoIds":[{"service":"youtube","id":"gb8IPYMbMS4"}]},"hide":false,"pdf":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04a-lectures/talk-4/d-closures.pdf","pdfFile":"d-closures.pdf"}]},{"route":"/topic/{{COURSEURL}}/topic04-functions-and-lambda-calculus/","type":"unit","title":"Exercises","summary":"Exercises","contentMd":"Exercises","frontMatter":{},"id":"unit-04b-exercises","img":"","imgFile":"","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"route":"/talk/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/talk-1","type":"talk","title":" Exercises on Functions","summary":"Exercises on Functions","contentMd":"# Exercises on Functions\n\nExercises on Functions\n\n\n","frontMatter":{},"id":"talk-1","img":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/talk-1/b-exercises-functions.png","imgFile":"b-exercises-functions.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"pdf":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/talk-1/b-exercises-functions.pdf","pdfFile":"b-exercises-functions.pdf"},{"route":"/talk/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/talk-2","type":"talk","title":" Exercises on Lambda Calculus","summary":"Lambda Calculus - exercises","contentMd":"# Exercises on Lambda Calculus\n\nLambda Calculus - exercises\n\n","frontMatter":{},"id":"talk-2","img":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/talk-2/c-lambda-calculus-exercises.png","imgFile":"c-lambda-calculus-exercises.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"pdf":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/talk-2/c-lambda-calculus-exercises.pdf","pdfFile":"c-lambda-calculus-exercises.pdf"},{"route":"/lab/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/book1","type":"lab","title":"Lab-04","summary":"Working through first class functions.","contentMd":"# First Class functions\n\nWorking through first class functions.","frontMatter":{},"id":"book1","img":"https://{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/book1/img/main.png","imgFile":"img/main.png","video":"","videoids":{"videoid":"","videoIds":[]},"hide":false,"los":[{"title":" First Class functions","shortTitle":"Lab-04","contentMd":"# First Class functions\n\nWorking through first class functions.","route":"/lab/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/book1/Lab-04","id":"Lab-04","type":"step"},{"title":" Objectives","shortTitle":"01","contentMd":"# Objectives\n\nOn completion of this lab you should:\n\n- Understand more about first class functions\n\n- be able to write functions that have functions as arguments and return functions\n\n\n","route":"/lab/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/book1/01","id":"01","type":"step"},{"title":" Sorting Examples","shortTitle":"02","contentMd":"# Sorting Examples\n\nThis example is based on the sorting example in Lecture 4.3. Create a file called **sorting.hs** and copy the following code into it (you can use copy and paste, but please be sure to understand the code).\n\nWe will use the Data.List module (and the sort and sortBy functions)\n\n ~~~haskell\nimport Data.List ( sort, sortBy )\n ~~~\nThen we will look at a list of names, where the names are in the form of a 2-tuple, the first element being the first name and the second element being the last name\n~~~haskell\nnames :: [(String, String)]\nnames = [(\"Angela\", \"Merkel\"), (\"Joe\", \"Biden\"), (\"Michael D\", \"Higgins\"), (\"Boris\", \"Johnson\")]\n~~~\n\nWe can check how the default sort works. Having loaded the \n\n~~~terminal\n > sort names\n~~~\nShould return: \n\n~~~terminal\n[(\"Angela\",\"Merkel\"),(\"Boris\",\"Johnson\"),(\"Joe\",\"Biden\"),(\"Michael D\",\"Higgins\")]\n~~~\n\nNote that the default sort is ascending on the first element of the tuple. \n\nIf we wish to define our own sort, we do so as follows:\n\n```haskell\ncompareLastNames :: Ord a => (a, a) -> (a, a) -> Ordering\ncompareLastNames name1 name2 \n           | lastName1 > lastName2 = GT \n           | lastName1 < lastName2 = LT\n           | otherwise = EQ\n    where   lastName1 = snd name1\n            lastName2 = snd name2\n \n```\n\nThis compares the second element of two 2-tuples (last name) and returns either \n\n- GT (greater than) (if the last name in the first tuple is aplhabetically greater than the last name in the second 2-tuple)\n- LT (less than)  (if the last name in the first tuple is aplhabetically less than the last name in the second 2-tuple)\n- EQ(equal)  (if the last name in the first tuple is aplhabetically equal to the last name in the second 2-tuple)\n\nThis is used with **sortBy**  and is an example of a function being used as an argument to another function. This can be used thus:\n\n```\n> sortBy compareLastNames names\n```\n\nThis says \"sort based on the logic in  **compareLastNames**\" which should return\n\n```\n[(\"Joe\",\"Biden\"),(\"Michael D\",\"Higgins\"),(\"Boris\",\"Johnson\"),(\"Angela\",\"Merkel\")]\n```\n\n","route":"/lab/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/book1/02","id":"02","type":"step"},{"title":" Sorting Exercise","shortTitle":"03","contentMd":"# Sorting Exercise\n\n\n\n1. Write a function **compareFirstNames** similar to **compareLastNames** to sort in ascending alphabetical order on first names. Check it using GHCI.\n2. Write a function **compareDescLastNames** that will be used with **sortBy** in descending alphhabetical order. Check it using GHCI. \n3. In the given **compareLastNames**, we didn't handle the case of what happens when the two last names are equal but the first names are different. Modify it to compare the first names in case of the two last names are equal. Check it using GHCI.","route":"/lab/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/book1/03","id":"03","type":"step"},{"title":" Address Example","shortTitle":"04","contentMd":"# Address Example\n\nThe full code of the solution that we worked in in Lecture 4.3 is shown here: \n\n```haskell\n--Based on Get Programming with Haskell, Will Kurt.\n\ndata  Location = WatSETU | CarSETU| WexSETU\ntype Name = (String, String)\n\noffice :: Location -> String\noffice WatSETU = \"SETU (Waterford Campus), Cork Road, Waterford, Ireland, X91 K0EK.\"\noffice CarSETU= \"SETU (Carlow Campus), Dublin Road, Carlow, Ireland, R93 V960.\"\noffice WexSETU = \"SETU (Wexford Campus), Summerhill Rd, Townparks, Wexford, Y35 KA07.\"\n\nwatOffice :: Name -> String\nwatOffice name =\n  if lastName < \"L\"\n    then nametext ++ \",  Lower Floor, Main Building  \" ++ office WatSETU\n    else nametext ++ \",  Top Floor, Main Building  \" ++ office WatSETU\n  where\n    nametext = fst name ++ \"  \" ++ snd name\n    lastName = snd name\n\ncarOffice :: Name -> String\ncarOffice name =   nametext ++ \",  \" ++ office CarSETU\n  where\n    nametext = fst name ++ \"  \" ++ snd name\n\nwexOffice :: Name -> String\nwexOffice name =   nametext ++ \",  \" ++ office WexSETU\n  where\n    nametext = snd name ++ \", \" ++ fst name\n\n\ngetLocation :: String -> (Name -> String)\ngetLocation location   = case location  of \n                \"Wat(SETU)\" -> watOffice \n                \"Car(SETU)\" -> carOffice\n                \"Wex(SETU)\" -> wexOffice \n                _     -> (\\name -> fst name ++ \"  \" ++ snd name ++ \": Address unknown\" ) \n                \naddressLetter :: Name -> String -> String\naddressLetter name location = getLocation location name \n```\n\n","route":"/lab/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/book1/04","id":"04","type":"step"},{"title":" Exercises on address example","shortTitle":"05","contentMd":"# Exercises on address example\n\nBased on the address example (code in previous tab), make the following changes to the code:\n\n1. Add a new location (ucd) which has the address \"University College Dublin, Belfield, Dublin 4, Ireland,  D04 V1W8\". The rule of the name and address is that \"Esq\" should be printed after each person's name. Check this in GHCI.\n2. Add another location (tcd) which has another address \"*Trinity College Dublin*, the University of Dublin College Green Dublin 2,Ireland, D02 PN40 \". The rule here is that only the last name should be part of the name and address. ","route":"/lab/{{COURSEURL}}/topic04-functions-and-lambda-calculus/unit-04b-exercises/book1/05","id":"05","type":"step"}]}]}]}],"properties":{"highlightstyle":"railscasts","courseurl":"https://tutors.dev/course/fun-prog-24","credits":"Ms. Mairead Meagher, SETU.","moodle":"https://moodle.wit.ie/course/view.php?id=200811","slack":"https://join.slack.com/t/funprog24/shared_invite/zt-2aly9cbup-0ZIces2WFd9thc9DpCvkLw","ignore":["topic000-assignments wip","topic05-list-comprehensions","topic06-recursive-functions","topic07-structuring-programs","topic08-higher-order-functions","topic09-declaring-types-and-classes","topic10-interactive-prog","topic11-functors-applicatives","topic12-monads","topic99-scaffolding","topic13-wip"]},"calendar":{"title":"Semester 2","weeks":[{"Mon Jan 08 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":0,"type":"free"}},{"Mon Jan 15 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":1,"type":"tuition"}},{"Mon Jan 22 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":2,"type":"tuition"}},{"Mon Jan 29 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":3,"type":"tuition"}},{"Mon Feb 05 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":4,"type":"tuition"}},{"Mon Feb 12 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":"Midterm","type":"reading"}},{"Mon Feb 19 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":5,"type":"tuition"}},{"Mon Feb 26 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":6,"type":"tuition"}},{"Mon Mar 04 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":7,"type":"tuition"}},{"Mon Mar 11 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":8,"type":"tuition"}},{"Mon Mar 18 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":9,"type":"tuition"}},{"Mon Mar 25 2024 00:00:00 GMT+0000 (Greenwich Mean Time)":{"title":"Easter","type":"reading"}},{"Mon Apr 01 2024 01:00:00 GMT+0100 (Irish Standard Time)":{"title":"Easter","type":"reading"}},{"Mon Apr 08 2024 01:00:00 GMT+0100 (Irish Standard Time)":{"title":10,"type":"tuition"}},{"Mon Apr 15 2024 01:00:00 GMT+0100 (Irish Standard Time)":{"title":11,"type":"tuition"}},{"Mon Apr 22 2024 01:00:00 GMT+0100 (Irish Standard Time)":{"title":12,"type":"tuition"}},{"Mon Apr 29 2024 01:00:00 GMT+0100 (Irish Standard Time)":{"title":"Study Week","type":"reading"}},{"Mon May 06 2024 01:00:00 GMT+0100 (Irish Standard Time)":{"title":"Exam Week","type":"reading"}}]}}